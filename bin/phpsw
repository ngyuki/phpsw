#!/bin/bash

set -e
cd "$(dirname "$0")/../"

# 見出し表示
function pp
{
	{
		echo -e "\n\e[1;32m"
		echo "$*"
		echo -e "\e[m"
	} 1>&2
}

# エラーを表示して終了
function err
{
	{
		echo -e "\n\e[1;31m"
		echo "$*"
		echo -e "\e[m"
	} 1>&2
	exit 1
}

# cmd.exe でコマンド実行
function cmd
{
	{
		echo -ne "\e[1;33m"
		cmd.exe /c "$*"
		echo -ne "\e[m"
	} 1>&2
}

# カレントディレクトリを Windows 形式で得る
function winpwd
{
	cmd.exe /c cd
}

# 任意の php.exe を探す
function search_php
{
	local php="$(ls versions/*/php.exe 2>/dev/null | tail -1)"

	[ ! -z "$php" ] && echo "$php"
}

# バージョン番号でソート
function sort_versions
{
	local php="$(search_php)"

	"$php" -n -r '
		$a = array_map("trim", file("php://stdin"));
		usort($a, "version_compare");
		echo(join("\n", $a)) . "\n";
	'
}

# バージョンの一覧表示
function versions
{
	find versions/ -type d -mindepth 1 -maxdepth 1 |
		sed 's/^.*\///' | sort_versions
}

# バージョン番号でフィルタ
function filter
{
	local p="$(echo "$1" | tr . '\.')"
	sed 's/$/./' | grep "^$p\." | sed 's/.$//'
}

# php.ini
function make_ini
{(
	cd "$1"
	php_dir="$(winpwd | sed 's/\\/\//g')"

	{
		[ -f php.ini-recommended ] && cat php.ini-recommended
		[ -f php.ini-development ] && cat php.ini-development

		cat conf.d/* 2>/dev/null |
			php -R 'echo str_replace("\$php_dir", $argv[1], $argn . PHP_EOL);' "$php_dir"
	} > php.ini
)}

if [ -n "$1" ]; then

	v=$(versions | filter "$1" | tail -1)

	[ -z "$v" ] && err "php-$1 notfound"

	php_dir="versions/$v"

	[ ! -f "$php_dir/php.exe" ] && err "$php_dir/php.exe notfound"

	[ -d "php" ] &&  cmd rmdir "php"

	cmd mklink /J "php" "versions\\$v"

	make_ini "$php_dir"
fi

pp "*PHP VERSIONS..."
versions

pp "*CURRENT VERSION"
php -n -v
