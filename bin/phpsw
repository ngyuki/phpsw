#!/bin/bash

set -e
cd "$(dirname "$0")/../"

function pp
{
	echo -ne "\e[1;32m"
	echo -n "$*"
	echo -ne "\e[m\n\n"
}

function err
{
	{
		echo -ne "\e[1;31m"
		echo -n "$*"
		echo -ne "\e[m\n"
	} 1>&2
	exit 1
}

function cmd
{
	echo -ne "\e[1;33m"
	cmd.exe /c "$*"
	echo -ne "\e[m"
}

function detect
{
	local php="$(ls versions/*/php.exe 2>/dev/null | tail -1)"

	[ ! -z "$php" ] && echo "$php"
}

function vsort
{
	local php="$(detect)"

	"$php" -n -r '
		$a = array_map("trim", file("php://stdin"));
		usort($a, "version_compare");
		echo(join("\n", $a)) . "\n";
	'
}

function list_versions
{
	find "versions/" -type d -mindepth 1 -maxdepth 1 |
		sed 's/^.*\///' | vsort
}

function filter
{
	local p="$(echo "$1" | tr . '\.')"
	sed 's/$/./' | grep "^$p\." | sed 's/.$//'
}

function makeconf
{
	if [ -z "$1" ]; then
		for v in $(list_versions); do
			php_dir="versions/$v"
			"$php_dir/php" -n "lib/makeconf.php" "$php_dir"
			echo "$php_dir/php.ini"
		done
	else
		php_dir="$1"
		"$php_dir/php" -n "lib/makeconf.php" "$php_dir"
		echo "$php_dir/php.ini"
	fi

	echo
}

function phpsw
{
	v=$(list_versions | filter "$1" | tail -1)
	[ -z "$v" ] && err "php-$1 notfound"

	php_dir="versions/$v"
	[ ! -f "$php_dir/php.exe" ] && err "$php_dir/php.exe notfound"

	[ -d "php" ] &&  cmd rmdir "php"
	cmd mklink /J "php" "versions\\$v"

	"$php_dir/php" -n "lib/makeconf.php" "$php_dir"
}

case "$1" in
	"")
		pp "*LIST VERSIONS"
		list_versions
		echo

		pp "*CURRENT VERSION"
		php -n -v | sed 's/^/  /'
		echo
		;;

	makeconf)
		pp "*MAKECONF"
		makeconf
		;;

	*)
		pp "*SWITCH VERSION"
		phpsw "$1"
		echo

		pp "*CURRENT VERSION"
		php -n -v | sed 's/^/  /'
		echo
		;;
esac
